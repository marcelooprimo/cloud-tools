---
# PATH final com todos apps instalados (copiados de um hosts já configurado)
app_path: 'export PATH="$PATH:/usr/local/go/bin:${KREW_ROOT:-$HOME/.krew}/bin:/opt/kubectx"'

# AWS modo de instalação, opção pip ou apt
awscli_install_mode: "pip"

# Versão do AWS CLI - opção v1 ou v2
awscli_version: "v2"

# AWS IAM VERSION
iam_auth_version: "1.21.2"

# Docker Machine
docker_machine: "no"

# Golang
golang_dir: "/usr/local/go"
golang_version: "1.21.4"

# Home do Usuario
home_user: "/home/{{ ansible_user_id }}"

# Usuário
user_id: "{{ ansible_user_id }}"

# Helm
helm_package: "helm=3.11.1-1"

# Helm Diff version
helm_diff: "v3.6.0"

# Helm Secrets version
helm_secrets: "v4.4.0"

# Helm Docs
helm_docs_version: "1.11.0"
helm_docs_package: "helm-docs_{{ helm_docs_version }}_linux_x86_64.tar.gz"

# Helmfile
helmfile_version: "v0.144.0"
helmfile_downloaded_filename: "helmfile_linux_amd64"

# JJ
jj_version: "1.9.2"

# Krew
krew_package: "krew-linux_amd64"

# KubeFWD
kubefwd_version: "1.22.4"

# Kubepug
kubepug_version: "v1.4.0"

# Terraform docs
terraform_docs_version: "v0.16.0"

# YQ
# Nota: As versões 4.1.0 e recentes possuem a letra v antes do número da versão
# as versões mais antigas 4.0.0 e anteriores não possuem tal letra.
# Verificar a nomenclatura e alterar a variável antes de iniciar o playbook
yq_version: "3.4.1"
yq_binary: "yq_linux_amd64"

# ZSH
zsh_install: "yes"
